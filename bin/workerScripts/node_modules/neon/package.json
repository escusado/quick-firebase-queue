{
  "name": "neon",
  "version": "2.0.0",
  "description": "Javascript DSL for Classical Inheritance",
  "main": "./neon",
  "directories": {
    "lib": "./lib"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/azendal/neon.git"
  },
  "keywords": [
    "class",
    "prototype",
    "inheritance",
    "oop"
  ],
  "readme": "= Neon\n\n== JavaScript DSL for Classical Inheritance\n\nThis files provides a DSL for the following design patterns: \n\n* inheritance\n* interface\n* module\n\nNeon packs a DSL for Class creation, that helps in making programs following an object oriented design.\n\nThe philosophy is that it should not try to emulate other languages, so it preserves the JavaScript good parts,\nbut with a nicer syntax to create classes that ensure interfaces and include reusable functionality as modules.\n\n== Why another Class System?\n\nAs the web applications are getting more complex these times, backend and frontend engineers work has fusioned, and they need to be able to establish a common language. It was created for people coming from OOP languages like Ruby to Javascript.\n\n=== Usage\n\n    Interface('Editable')({\n        constructor : ['x'],\n        prototype   : ['x']\n    });\n\n    Module('Composition')({\n        y : 5,\n        prototype : {\n            z : 3\n        }\n    });\n\n    Module('Other')({\n        a : 5,\n        prototype : {\n            b : 3\n        }\n    });\n\n    Class('Overlay').inherits(Widget).ensures(Editable).includes(Composition, Other)({\n        html : '<div></div>',\n        prototype : {\n            init : function (element){\n                if(!element){\n                    element = document.createElement('div');\n                    element.innerHTML = 'hello';\n                    document.body.appendChild(element);\n                }\n            },\n            b : 5\n        }\n    });\n\n== License\n\nCopyright (c) 2009 Fernando Trasvi√±a\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.markdown",
  "bugs": {
    "url": "https://github.com/azendal/neon/issues"
  },
  "_id": "neon@2.0.0",
  "_from": "neon@^2.0.0"
}
